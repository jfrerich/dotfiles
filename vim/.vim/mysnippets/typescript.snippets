# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
# Fmt Printf debug

## taken from vim-go
# same shortcuts for printing in go 

# Fmt Printf debug
snippet pp "console.log - prettyprint"
import {inspect} from 'util';
console.log('$1 = ', inspect(${1:${VISUAL}}, false, null, true /* enable colors */))
endsnippet

snippet ff "console.log(...)"
console.log('$1', ${1:${VISUAL}})
endsnippet

# Fmt Println debug
snippet fn "console.log(...)"
console.log('${1:${VISUAL}}')
endsnippet

# Fmt Printf debug
snippet ffi "console.log(X. IN HERE)"
console.log('${1:${VISUAL}}. IN HERE!')
endsnippet


